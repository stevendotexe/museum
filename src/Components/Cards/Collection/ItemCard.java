package Components.Cards.Collection;

import Components.Utilities.ImageResizer;
import javax.swing.ImageIcon;
import java.net.MalformedURLException;
import java.net.URL;

public class ItemCard extends javax.swing.JPanel {

    /**
     * Creates new form ItemCard
     */
    public ItemCard(String name, String imageUrl, String description, String dateAdded, String collectionName) {
        initComponents();
        setItemName(name);
        setItemImage(imageUrl);
        setDescription(description);
        setDateAdded(dateAdded);
        setCollectionName(collectionName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        collectionImage = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextPane1 = new javax.swing.JTextPane();

        setBackground(new java.awt.Color(232, 235, 242));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusable(false);
        setRequestFocusEnabled(false);

        collectionImage.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("DM Sans", 1, 24)); // NOI18N
        jLabel2.setText("Item Name");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("DM Sans", 0, 14)); // NOI18N
        jLabel3.setText("Addition Date");
        jLabel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("DM Sans", 0, 14)); // NOI18N
        jLabel4.setText("Collection Name");
        jLabel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTextPane1.setBackground(new java.awt.Color(232, 235, 242));
        jTextPane1.setEditable(false);
        jTextPane1.setFocusable(false);
        jTextPane1.setRequestFocusEnabled(false);
        jTextPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(collectionImage, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(0, 437, Short.MAX_VALUE))
                    .addComponent(jTextPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(collectionImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>                        

    private void componentClicked(java.awt.event.MouseEvent evt) {                                  
        System.out.println("Item pressed");
    }                                 

    public void setItemName(String name) {
        jLabel2.setText(name);
    }

    private boolean isLoading = false;
    private boolean hasError = false;

    public void setImageLoading(boolean loading) {
        this.isLoading = loading;
        if (loading) {
            collectionImage.setIcon(null);
            collectionImage.setText("Loading image...");
        } else if (!hasError) {
            collectionImage.setText("No Image");
        }
    }

    public void setImageError(boolean error) {
        this.hasError = error;
        if (error) {
            collectionImage.setIcon(null);
            collectionImage.setText("Failed to load image");
        }
    }

    public void setImage(ImageIcon icon) {
        if (icon != null) {
            collectionImage.setIcon(icon);
            collectionImage.setText("");
        } else {
            collectionImage.setIcon(null);
            collectionImage.setText("No Image");
        }
    }

    public void setItemImage(String url) {
        final int IMAGE_WIDTH = 156;
        final int IMAGE_HEIGHT = 156;

        if (url == null || url.trim().isEmpty()) {
            // Set a default image or placeholder when URL is null or empty
            collectionImage.setIcon(null);
            collectionImage.setText("No Image");
            return;
        }

        // Set loading state
        setImageLoading(true);

        try {
            URL imageURL = new URL(url);
            ImageResizer resize = new ImageResizer();
            ImageIcon scaledIcon = resize.toCover(imageURL, IMAGE_WIDTH, IMAGE_HEIGHT);
            collectionImage.setIcon(scaledIcon);
            collectionImage.setText("");
            if (collectionImage.getParent() != null) {
                collectionImage.getParent().revalidate();
                collectionImage.getParent().repaint();
            }
        } catch (MalformedURLException e) {
            System.err.println("Invalid URL: " + url);
            collectionImage.setIcon(null);
            collectionImage.setText("Invalid Image");
            setImageError(true);
        }
    }

    public void setDescription(String description) {
        jTextPane1.setText(description);
    }

    public void setDateAdded(String date) {
        jLabel3.setText(date);
    }

    public void setCollectionName(String name) {
        jLabel4.setText(name);
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel collectionImage;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration                   
}