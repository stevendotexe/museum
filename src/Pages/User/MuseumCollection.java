package Pages.User;

import Components.Cards.Collection.ItemCard;
import Components.Cards.Collection.RecentlyAddedContainer;
import Components.Cards.NavigationBar;
import Components.Cards.SearchBar;
import Components.Utilities.ContainerPopulator;
import Components.Utilities.Item;
import Components.Utilities.ItemQueries;
import static Components.Utilities.DatabaseConnection.getConnection;

import javax.swing.*;
import java.awt.*;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

public class MuseumCollection extends javax.swing.JFrame {

    /**
     * Creates new form Collection
     */
    public MuseumCollection() {
        Connection conn = null;
        try {
            conn = getConnection();
        } catch (SQLException | ClassNotFoundException e) {
            e.getMessage();
            e.printStackTrace();
        }

        if (conn != null) {
            initComponents(conn);
            setSize(1280, 720);
            setLocationRelativeTo(null); // Center the window
        } else {
            throw new RuntimeException("Failed to establish database connection");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents(Connection conn) {
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 300, Short.MAX_VALUE)
        );

        NavigationBar navigationBar = new NavigationBar();
        
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(navigationBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(navigationBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 300, Short.MAX_VALUE))
        );

        RecentlyAddedContainer recentlyAddedContainer = new RecentlyAddedContainer();
        recentlyAddedContainer.setPreferredSize(new java.awt.Dimension(1200, 300));
        
        SearchBar searchBar = new SearchBar();
        searchBar.setPreferredSize(new java.awt.Dimension(400, 40));

        // Item Container - to contain all items and also database operations later
        javax.swing.JPanel itemContainer = new javax.swing.JPanel();
        itemContainer.setLayout(new java.awt.GridLayout(0, 1, 0, 10)); // Single column, 10px vertical gap
        
        // Create a sample item
        Item sampleItem = new Item(
            1,
            "Ancient Vase",
            "https://images.unsplash.com/photo-1518998053901-5348d3961a04?q=80&w=1000",
            "A beautiful ancient vase from the Roman period",
            "Rome, Italy",
            "Pottery",
            "2024-01-15",
            "2024-03-15",
            "2024-03-15",
            true
        );
        
        // Create ItemCard with the sample item
        ItemCard itemCard = new ItemCard(
            sampleItem.getName(),
            sampleItem.getImageUrl(),
            sampleItem.getDescription(),
            sampleItem.getDateAdded(),
            sampleItem.getCategory()
        );
        
        itemContainer.add(itemCard);
        
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(navigationBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(recentlyAddedContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(itemContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(navigationBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(recentlyAddedContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30)
                                .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20)
                                .addComponent(itemContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(30, Short.MAX_VALUE))
        );

        try {
            ResultSet rs = ItemQueries.getRecentlyAddedItems(conn);
            if (rs != null) {
                ContainerPopulator.populateRecentlyAddedContainer(recentlyAddedContainer, rs);
                System.err.println("Populated RecentlyAddedContainer");
            }
        } catch (SQLException e) {
            System.out.println("Failed to fetch recently added items");
            e.printStackTrace();
        }

        pack();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MuseumCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MuseumCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MuseumCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MuseumCollection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MuseumCollection().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    // End of variables declaration
}
